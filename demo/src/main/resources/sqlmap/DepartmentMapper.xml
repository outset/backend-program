<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.DepartmentMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.Department">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="seq" jdbcType="BIGINT" property="seq"/>
        <result column="mtime" jdbcType="INTEGER" property="mtime"/>
        <result column="ctime" jdbcType="INTEGER" property="ctime"/>
        <result column="muser_id" jdbcType="INTEGER" property="muserId"/>
        <result column="cuser_id" jdbcType="INTEGER" property="cuserId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        id, `name`, `level`, parent_id, seq, mtime, ctime, muser_id, cuser_id
    </sql>
    <select id="selectByExample" parameterType="com.example.demo.DepartmentExample" resultMap="BaseResultMap">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select
        <include refid="Base_Column_List"/>
        from department
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        delete from department
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.DepartmentExample">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        delete from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.Department">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        insert into department (id, `name`, `level`,
        parent_id, seq, mtime,
        ctime, muser_id, cuser_id
        )
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
        #{parentId,jdbcType=BIGINT}, #{seq,jdbcType=BIGINT}, #{mtime,jdbcType=INTEGER},
        #{ctime,jdbcType=INTEGER}, #{muserId,jdbcType=INTEGER}, #{cuserId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.Department">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="level != null">
                `level`,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="seq != null">
                seq,
            </if>
            <if test="mtime != null">
                mtime,
            </if>
            <if test="ctime != null">
                ctime,
            </if>
            <if test="muserId != null">
                muser_id,
            </if>
            <if test="cuserId != null">
                cuser_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="seq != null">
                #{seq,jdbcType=BIGINT},
            </if>
            <if test="mtime != null">
                #{mtime,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                #{ctime,jdbcType=INTEGER},
            </if>
            <if test="muserId != null">
                #{muserId,jdbcType=INTEGER},
            </if>
            <if test="cuserId != null">
                #{cuserId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.DepartmentExample" resultType="java.lang.Long">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        select count(*) from department
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update department
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null">
                `level` = #{record.level,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.seq != null">
                seq = #{record.seq,jdbcType=BIGINT},
            </if>
            <if test="record.mtime != null">
                mtime = #{record.mtime,jdbcType=INTEGER},
            </if>
            <if test="record.ctime != null">
                ctime = #{record.ctime,jdbcType=INTEGER},
            </if>
            <if test="record.muserId != null">
                muser_id = #{record.muserId,jdbcType=INTEGER},
            </if>
            <if test="record.cuserId != null">
                cuser_id = #{record.cuserId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update department
        set id = #{record.id,jdbcType=BIGINT},
        `name` = #{record.name,jdbcType=VARCHAR},
        `level` = #{record.level,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=BIGINT},
        seq = #{record.seq,jdbcType=BIGINT},
        mtime = #{record.mtime,jdbcType=INTEGER},
        ctime = #{record.ctime,jdbcType=INTEGER},
        muser_id = #{record.muserId,jdbcType=INTEGER},
        cuser_id = #{record.cuserId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.Department">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update department
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                `level` = #{level,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=BIGINT},
            </if>
            <if test="mtime != null">
                mtime = #{mtime,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                ctime = #{ctime,jdbcType=INTEGER},
            </if>
            <if test="muserId != null">
                muser_id = #{muserId,jdbcType=INTEGER},
            </if>
            <if test="cuserId != null">
                cuser_id = #{cuserId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.Department">
        <!-- @mbg.generated: generated automatically, do not modify! -->
        update department
        set `name` = #{name,jdbcType=VARCHAR},
        `level` = #{level,jdbcType=VARCHAR},
        parent_id = #{parentId,jdbcType=BIGINT},
        seq = #{seq,jdbcType=BIGINT},
        mtime = #{mtime,jdbcType=INTEGER},
        ctime = #{ctime,jdbcType=INTEGER},
        muser_id = #{muserId,jdbcType=INTEGER},
        cuser_id = #{cuserId,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>